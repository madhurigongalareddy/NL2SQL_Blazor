@page "/users"
@inject UserService UserService
@inject ProductService ProductService
@rendermode InteractiveServer
@using NL2SQL_Blazor.Components.Models

<h3>User List</h3>

@if (users == null)
{
    <p><span class="spinner-border spinner-border-sm"></span> Loading...</p>
}
else if (users.Count == 0)
{
    <p>No users found.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>User ID</th>
                <th>User Name</th>
                <th>Role</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.UserId</td>
                    <td>@user.Username</td>
                    <td>@user.Role</td>
                    <td>
                        @if (editingUserId == user.UserId)
                        {
                            <button class="btn btn-sm btn-success me-1" @onclick="() => SaveRole(user)">Save</button>
                            <button class="btn btn-sm btn-secondary" @onclick="CancelEdit">Cancel</button>
                        }
                        else
                        {
                            <button class="btn btn-sm btn-primary" @onclick="() => EditRole(user)">Edit</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<h3 class="mt-4">Product List</h3>

@if (products == null)
{
    <p><span class="spinner-border spinner-border-sm"></span> Loading...</p>
}
else if (products.Count == 0)
{
    <p>No products found.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Product ID</th>
                <th>Product Name</th>
                <th>DB Server Name</th>
                <th>Version</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.ProductName</td>
                    <td>@product.DBServerName</td>
                    <td>
                        @if (editingProductId == product.Id)
                        {
                            <input class="form-control" @bind="editedVersion" />
                        }
                        else
                        {
                            @product.Version
                        }
                    </td>
                    <td>
                        @if (editingProductId == product.Id)
                        {
                            <button class="btn btn-sm btn-success me-1" @onclick="() => SaveProduct(product)">Save</button>
                            <button class="btn btn-sm btn-secondary" @onclick="CancelProductEdit">Cancel</button>
                        }
                        else
                        {
                            <button class="btn btn-sm btn-primary" @onclick="() => EditProduct(product)">Edit</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<NL2SQL_Blazor.Components.Models.User> users;
    private readonly List<string> productName = new() { "Claims", "Provider", "Member" };
    private int? editingUserId = null;
    private string selectedProductName;

    private List<NL2SQL_Blazor.Components.Models.Product> products;
    private int? editingProductId = null;
    private string editedVersion;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetUsersAsync();
        products = await ProductService.GetProductsAsync();
    }

    private void EditRole(NL2SQL_Blazor.Components.Models.User user)
    {
        editingUserId = user.UserId;
        selectedProductName = user.ProductName;
    }

    private void CancelEdit()
    {
        editingUserId = null;
        selectedProductName = null;
    }

    private async Task SaveRole(NL2SQL_Blazor.Components.Models.User user)
    {
        user.ProductName = selectedProductName;
        editingUserId = null;
        selectedProductName = null;
        await UserService.UpdateUserRoleAsync(user.UserId, user.ProductName);
    }

    private void EditProduct(NL2SQL_Blazor.Components.Models.Product product)
    {
        editingProductId = product.Id;
        editedVersion = product.Version;
    }

    private void CancelProductEdit()
    {
        editingProductId = null;
        editedVersion = null;
    }

    private async Task SaveProduct(NL2SQL_Blazor.Components.Models.Product product)
    {
        product.Version = editedVersion;
        editingProductId = null;
        editedVersion = null;
        await ProductService.UpdateProductAsync(product);
    }
}