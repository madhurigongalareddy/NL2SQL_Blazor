@page "/"
@page "/login"
@inject NavigationManager Navigation
@inject AuthenticationService AuthService
@layout Components.Layout.LoginLayout
@rendermode InteractiveServer

<h3>Login</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="loginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>


@code {
    private LoginModel loginModel = new();
    private string ErrorMessage;

    private async Task HandleLogin()
    {
        var result = await AuthService.LoginAsync(loginModel.Username, loginModel.Password);
        if (result)
        {
            Navigation.NavigateTo("/home");
        }
        else
        {
            ErrorMessage = "Invalid username or password.";
        }
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}
