CREATE TABLE V_provider (
    ProviderId            BIGINT         NOT NULL PRIMARY KEY,
    ProviderFullName      VARCHAR(200)   NOT NULL,
    ProviderType          VARCHAR(20)    NOT NULL,
    SpecialtyCode         BIGINT         NOT NULL,
    ProviderStatus        VARCHAR(20)    NOT NULL,
    NPI                   CHAR(10),
    FederalId             CHAR(12)       NOT NULL,
    CreatedDate           TIMESTAMP      NOT NULL,
    CreatedByUserId       VARCHAR(50)    NOT NULL,
    LastUpdate            TIMESTAMP      NOT NULL,
    UpdatedByUserId       VARCHAR(50)    NOT NULL
);

CREATE TABLE V_provideraction (
    ActionId              BIGINT         NOT NULL PRIMARY KEY,
    ProviderId            BIGINT         NOT NULL,
    CreatedDate           TIMESTAMP      NOT NULL,
    CreatedByUserId       VARCHAR(50)    NOT NULL,
    CompletedByUserId     BIGINT         NOT NULL,
    CompletedDate         TIMESTAMP,
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId)
);

CREATE TABLE V_providerattribute (
    ProviderId            BIGINT         NOT NULL,
    AttributeId           BIGINT         NOT NULL,
    AttributeValue        VARCHAR(60)    NOT NULL,
    EffectiveDate         TIMESTAMP      NOT NULL,
    TerminationDate       TIMESTAMP      NOT NULL,
    PRIMARY KEY (ProviderId, AttributeId),
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId)
);

CREATE TABLE V_ProviderBedTypes (
    ProviderId            BIGINT         NOT NULL,
    BedTypeId             BIGINT         NOT NULL,
    BedTypeDescription    VARCHAR(100)   NOT NULL,
    BedCapacity           INTEGER        NOT NULL,
    EffectiveDate         TIMESTAMP      NOT NULL,
    TerminationDate       TIMESTAMP      NOT NULL,
    PRIMARY KEY (ProviderId, BedTypeId),
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId)
);

CREATE TABLE V_providercos (
    ProviderId            BIGINT         NOT NULL,
    ProgramId             BIGINT         NOT NULL,
    CosCode               VARCHAR(20)    NOT NULL,
    EffectiveDate         TIMESTAMP      NOT NULL,
    TerminationDate       TIMESTAMP      NOT NULL,
    PRIMARY KEY (ProviderId, ProgramId, CosCode),
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId)
);

CREATE TABLE V_providergroup (
    ProviderId            BIGINT         NOT NULL,
    CategoryId            BIGINT         NOT NULL,
    SubCategoryId         BIGINT         NOT NULL,
    ServiceGroupId        BIGINT         NOT NULL,
    EffectiveDate         TIMESTAMP      NOT NULL,
    TerminationDate       TIMESTAMP      NOT NULL,
    IsIncludedService     BOOLEAN        NOT NULL,
    PRIMARY KEY (ProviderId, CategoryId, SubCategoryId, ServiceGroupId),
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId)
);

CREATE TABLE V_providerissue (
    ProviderId            BIGINT         NOT NULL,
    IssueCodeId           BIGINT         NOT NULL,
    ReferralId            BIGINT         NOT NULL,
    ClaimId               BIGINT         NOT NULL,
    CreatedDate           TIMESTAMP      NOT NULL,
    PRIMARY KEY (ProviderId, IssueCodeId, ReferralId, ClaimId),
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId)
);

CREATE TABLE V_providermemo (
    MemoId                BIGINT         NOT NULL PRIMARY KEY,
    ProviderId            BIGINT         NOT NULL,
    MemoType              VARCHAR(20)    NOT NULL,
    CreatedDate           TIMESTAMP      NOT NULL,
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId)
);

CREATE TABLE V_ProviderRiskLevel (
    ProviderId            BIGINT         NOT NULL,
    RiskLevelId           BIGINT         NOT NULL,
    RiskReasonId          BIGINT         NOT NULL,
    EffectiveDate         TIMESTAMP      NOT NULL,
    TerminationDate       TIMESTAMP      NOT NULL,
    PRIMARY KEY (ProviderId, RiskLevelId, RiskReasonId),
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId),
    FOREIGN KEY (RiskReasonId) REFERENCES V_ProviderRiskReason(RiskReasonId)
);

CREATE TABLE V_ProviderRiskReason (
    RiskReasonId          BIGINT         NOT NULL PRIMARY KEY,
    RiskReasonDescription VARCHAR(100)   NOT NULL,
    EffectiveDate         TIMESTAMP      NOT NULL,
    TerminationDate       TIMESTAMP      NOT NULL
);

CREATE TABLE V_providerspecialty (
    ProviderId            BIGINT         NOT NULL,
    SpecialtyCode         BIGINT         NOT NULL,
    SpecialtyType         VARCHAR(20)    NOT NULL,
    SpecialtyStatus       VARCHAR(20)    NOT NULL,
    EffectiveDate         TIMESTAMP      NOT NULL,
    TerminationDate       TIMESTAMP      NOT NULL,
    PRIMARY KEY (ProviderId, SpecialtyCode),
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId)
);

CREATE TABLE V_ProviderStateCertification (
    ProviderId            BIGINT         NOT NULL,
    CertificateId         BIGINT         NOT NULL,
    CertificateDescription VARCHAR(100)  NOT NULL,
    StateId               CHAR(15)       NOT NULL,
    EffectiveDate         TIMESTAMP      NOT NULL,
    TerminationDate       TIMESTAMP      NOT NULL,
    PRIMARY KEY (ProviderId, CertificateId),
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId)
);

CREATE TABLE V_providertaxid (
    ProviderId            BIGINT         NOT NULL,
    TaxId                 CHAR(12)       NOT NULL,
    TaxIdType             VARCHAR(20),
    LegalName             VARCHAR(95),
    EffectiveDate         TIMESTAMP      NOT NULL,
    TerminationDate       TIMESTAMP      NOT NULL,
    PRIMARY KEY (ProviderId, TaxId),
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId)
);

CREATE TABLE V_providertaxonomy (
    ProviderId            BIGINT         NOT NULL,
    TaxonomyCode          CHAR(30)       NOT NULL,
    EffectiveDate         TIMESTAMP      NOT NULL,
    TerminationDate       TIMESTAMP      NOT NULL,
    PRIMARY KEY (ProviderId, TaxonomyCode),
    FOREIGN KEY (ProviderId) REFERENCES V_provider(ProviderId)
);

CREATE TABLE V_providertype (
    ProviderType              VARCHAR(20)    NOT NULL PRIMARY KEY,
    ProviderTypeDescription   VARCHAR(100)   NOT NULL,
    ProviderClass             BIGINT         NOT NULL,
    IsGroup                   BOOLEAN        NOT NULL,
    IsActive                  BOOLEAN        NOT NULL
);
